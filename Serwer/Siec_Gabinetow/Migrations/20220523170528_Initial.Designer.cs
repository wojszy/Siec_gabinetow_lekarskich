// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Siec_Gabinetow.Data;

namespace Siec_Gabinetow.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220523170528_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Siec_Gabinetow.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<int>("ClinicId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Date")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PatientId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("Price")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("AppointmentId");

                    b.HasIndex("ClinicId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("PatientId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ReceptionistId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Status")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("Total")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("BillId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ReceptionistId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Clinic", b =>
                {
                    b.Property<int>("ClinicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<int>("ClinicNumber")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ClinicType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("ReservationStatus")
                        .HasColumnType("NUMBER(1)");

                    b.HasKey("ClinicId");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<int>("WorkerId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("DoctorId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Duty", b =>
                {
                    b.Property<int>("DutyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("WorkerId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("DutyId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Duties");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("Price")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<bool>("Status")
                        .HasColumnType("NUMBER(1)");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<int>("WorkerId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ManagerId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("PatientId");

                    b.HasIndex("UserId");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<long>("Amount")
                        .HasColumnType("NUMBER(19)");

                    b.Property<int>("BillId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("PaymentId");

                    b.HasIndex("BillId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Prescription", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<int>("DoctorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Medicine")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("PatientId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("PrescriptionId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Receptionist", b =>
                {
                    b.Property<int>("ReceptionistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<int>("WorkerId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ReceptionistId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Receptionist");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<int>("EquipmentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ReceptionistId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("RentTo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("RentalId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ReceptionistId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Result", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("PatientId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Type")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ResultId");

                    b.HasIndex("PatientId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Surname")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .UseIdentityColumn();

                    b.Property<double?>("Salary")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("WorkerId");

                    b.HasIndex("UserId");

                    b.ToTable("Worker");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Appointment", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Clinic", "Clinic")
                        .WithMany()
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siec_Gabinetow.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siec_Gabinetow.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Bill", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siec_Gabinetow.Models.Receptionist", "Receptionist")
                        .WithMany()
                        .HasForeignKey("ReceptionistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Receptionist");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Doctor", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Duty", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siec_Gabinetow.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Manager", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Patient", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Payment", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Prescription", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siec_Gabinetow.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Receptionist", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Rental", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siec_Gabinetow.Models.Receptionist", "Receptionist")
                        .WithMany()
                        .HasForeignKey("ReceptionistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Receptionist");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Result", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.User", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Siec_Gabinetow.Models.Worker", b =>
                {
                    b.HasOne("Siec_Gabinetow.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
